[{"C:\\Users\\HP\\Desktop\\animalis-main\\src\\App.js":"1","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\UserAction.js":"2","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Form\\FormLogin.js":"3","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\PostDescription\\PostDecription.js":"4","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Header\\Header.js":"5","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Form\\FormUser.js":"6","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\PostReducer.js":"7","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\AuthReducer.js":"8","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Posts\\MyPosts.js":"9","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Post\\Post.js":"10","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Navbarb\\Navbarb.js":"11","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Posts\\MyPostsCard.js":"12","C:\\Users\\HP\\Desktop\\animalis-main\\src\\reportWebVitals.js":"13","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Utils\\setAuthToken.js":"14","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Routing\\PrivateRoute.js":"15","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Footer\\Footer.js":"16","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\UserReducer.js":"17","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\ActionTypes.js":"18","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Dashboard\\Spinner.js":"19","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\UserInfo\\UserInfo.js":"20"},{"size":2711,"mtime":1625399574000,"results":"21","hashOfConfig":"22"},{"size":3330,"mtime":1625399574000,"results":"23","hashOfConfig":"22"},{"size":2229,"mtime":1625399574000,"results":"24","hashOfConfig":"22"},{"size":2009,"mtime":1625399574000,"results":"25","hashOfConfig":"22"},{"size":2987,"mtime":1625399574000,"results":"26","hashOfConfig":"22"},{"size":5981,"mtime":1625399574000,"results":"27","hashOfConfig":"22"},{"size":476,"mtime":1625399574000,"results":"28","hashOfConfig":"22"},{"size":1279,"mtime":1625399574000,"results":"29","hashOfConfig":"22"},{"size":805,"mtime":1625399574000,"results":"30","hashOfConfig":"22"},{"size":717,"mtime":1625399574000,"results":"31","hashOfConfig":"22"},{"size":2672,"mtime":1625399574000,"results":"32","hashOfConfig":"22"},{"size":1131,"mtime":1625399574000,"results":"33","hashOfConfig":"22"},{"size":362,"mtime":1625399574000,"results":"34","hashOfConfig":"22"},{"size":252,"mtime":1625399574000,"results":"35","hashOfConfig":"22"},{"size":579,"mtime":1625399574000,"results":"36","hashOfConfig":"22"},{"size":1199,"mtime":1625399574000,"results":"37","hashOfConfig":"22"},{"size":291,"mtime":1625399574000,"results":"38","hashOfConfig":"22"},{"size":686,"mtime":1625399574000,"results":"39","hashOfConfig":"22"},{"size":288,"mtime":1625399574000,"results":"40","hashOfConfig":"22"},{"size":1774,"mtime":1625399574000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1o11bwd",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Desktop\\animalis-main\\src\\App.js",["86","87","88"],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\UserAction.js",[],["89","90"],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Form\\FormLogin.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\PostDescription\\PostDecription.js",["91"],"import React from 'react';\nimport {useSelector} from \"react-redux\"; \nimport \"./postDescription.css\";\nimport {Card, ListGroup, Form} from 'react-bootstrap';\n\nconst PostDecription = ({match}) => {\n    const posts=useSelector((state)=>state.postReducer); \n    const thePost=posts.find(post=>post._id===match.params.id);\n\n   const nbCommentaire=thePost.comments.length;\n   const tab=[2,3,4,5]; \n\n\n    return (\n        <Card style={{ width: '50rem' }} className=\"postDescription\">\n\n\n    \n             <Card.Title className=\"postHeadDesc\">\n            <Card.Img variant=\"top\" src={'http://localhost:5000/'+ thePost.photo} className=\"imageDescription\"/>\n            <ListGroup variant=\"flush\" className=\"listDescription\">\n                <ListGroup.Item> <span className=\"titleDesc\"> Titre : </span> {thePost.title} </ListGroup.Item>\n                <ListGroup.Item> <span className=\"titleDesc\"> Catégorie : </span> {thePost.category.split('_').join(' ')} </ListGroup.Item>\n                <ListGroup.Item> <span className=\"titleDesc\"> Prix : </span> {thePost.price} DT </ListGroup.Item>\n                <ListGroup.Item> <span className=\"titleDesc\"> Contact : </span> {thePost.phone} </ListGroup.Item>\n            </ListGroup>\n            </Card.Title>\n            <Card.Body>\n           <span className=\"titleDesc\">  Description :  </span>\n                <Card.Text style={{border:\"solid #5eaa14 1px\"}}>\n                  {thePost.description}\n                </Card.Text>\n\n             <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\n                    <Form.Label> <span className=\"titleDesc\"> Commentaires : </span> ({tab.length}) </Form.Label>\n                    <ListGroup variant=\"flush\">\n                         {tab.map((commentaire,key)=><ListGroup.Item key={key}>{commentaire}</ListGroup.Item>)}\n\n                    </ListGroup>\n                      \n                \n            </Form.Group>\n               \n        \n        </Card.Body>\n  </Card>\n    );\n}\n\nexport default PostDecription;\n","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Header\\Header.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Form\\FormUser.js",["92","93","94","95","96"],"\nimport React, {useState} from 'react';\nimport './formUser.css';\nimport {Modal, Form, Button,Alert} from 'react-bootstrap'; \nimport {useDispatch, useSelector} from 'react-redux'; \nimport {createUser} from '../../Redux/UserAction';\n\nimport {registerUser} from '../../Redux/UserAction';\nimport {Redirect} from 'react-router-dom'; \nimport {PropTypes} from 'prop-types'; \n  \n// formulaire d inscription de l utilisateur \n\nconst FormUser = () => {\n    const users=useSelector(state=>state.userReducer);\n    const isAuthenticated=useSelector((state)=>state.authReducer.isAuthenticated); \n    console.log('isAuthenticated=>',isAuthenticated); \n\n\n    const [etat, setEtat]=useState(false);\n    const [userData, setUserData]=useState({\n        userName:'',\n        email:'',\n        password:'',\n        phone:'',\n        city:'',\n        professionnal:false\n\n    })\n    const dispatch=useDispatch();\n  \n /*const handleSubmit=(e)=>{\n     e.preventDefault();\n    const verifUser=users.find(user=>user.email===userData.email);\n    \n    verifUser?setEtat(true):setEtat(false);\n    \n     dispatch(createUser(userData)); \n     reset();\n\n }*/\n const handleSubmit=(e)=>{\n     e.preventDefault();\n     dispatch(registerUser(userData)); \n\n     reset();\n    \n   \n\n\n }\n\n\n\n    const reset=()=>{\n        setUserData({\n            userName:'',\n            email:'',\n            password:'',\n            phone:'',\n            city:'',\n            professionnal:false\n        })\n    }\n    \n  if(isAuthenticated){\n     return <Redirect to=\"/user/dashboard\"/>\n  }\n    \n    return (\n        <div>\n         \n             <Modal.Dialog  className=\"formUser\" style={{position:\"absolute\", top:\"40px\", right:\"175px\", zIndex:\"3\" }}>\n\n                    <Modal.Title style={{color:\"#28a745\", marginLeft:\"20px\"}}>Créer votre Compte </Modal.Title>\n                    {/*etat?(<Alert  variant=\"danger\"> This email is already used </Alert>):(<></>)*/}\n\n                    <Modal.Body>\n                    <Form onSubmit={handleSubmit}>\n                            <Form.Group controlId=\"formBasicUserName\">\n                                 <Form.Control size=\"lg\" type=\"text\" placeholder=\"UserName\" value={userData.userName} name=\"userName\"\n                                 onChange={(e)=>setUserData({...userData, userName:e.target.value})}\n                               \n                                 />\n                             </Form.Group>\n                             <Form.Group controlId=\"formBasicEmail\">\n                              \n                                <Form.Control type=\"email\" placeholder=\"Enter email\" size=\"lg\" value={userData.email}\n                                onChange={(e)=>setUserData({...userData, email:e.target.value})}\n                                required\n                               />\n                              \n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Control type=\"password\" placeholder=\"Password\"  size=\"lg\" value={userData.password}\n                                    onChange={(e)=>setUserData({...userData, password:e.target.value})}\n                                    required\n                                    />\n                            </Form.Group>\n\n                            <Form.Group>\n                                 <Form.Row>\n                                 <Form.Control size=\"lg\" type=\"text\" placeholder=\"Phone\" name=\"phone\" value={userData.phone}\n                                      onChange={(e)=>setUserData({...userData, phone:Number(e.target.value)})}\n                                     \n                                      />\n                                </Form.Row>\n                           </Form.Group>\n\n                           <Form.Group>\n                                <Form.Control as=\"select\" size=\"lg\"  name=\"city\" value={userData.city}\n                                onChange={(e)=>setUserData({...userData, city:e.target.value})}\n                                >\n                                    <option>Ville</option>\n                                    <option value=\"bizerte\"> Bizerte</option>\n                                    <option value=\"tunis\">Tunis</option>\n                                    <option value=\"sousse\"> Sousse</option>\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group>\n                            <Form.Group controlId=\"exampleForm.SelectCustomm\">\n                            Etes vous un professionnel?\n                                            <Form.Control as=\"select\" custom  value={userData.professionnal}\n                                onChange={(e)=>setUserData({...userData, professionnal:e.target.value})}>\n                                            \n                                            <option value={true}>True</option>\n                                            <option value={false}>False</option>\n                                            \n                                        \n                                            </Form.Control>\n                        </Form.Group>\n                               \n\n                                     \n                              </Form.Group>\n                           \n                            <Button variant=\"success\" type=\"Sign up\" style={{marginRight:\"10px\"}}>\n                                Register\n                            </Button>\n                            <Button variant=\"danger\" type=\"reset\" onClick={()=>reset()}>\n                                Reset\n                            </Button>\n                    </Form>\n                        \n                        \n                    </Modal.Body>\n\n\n                   \n            </Modal.Dialog>\n        </div>\n    );\n}\n\n\nexport default FormUser;\n\nFormUser.propTypes={\n    isAuthenticated:PropTypes.bool\n}","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\PostReducer.js",["97","98"],"import {FETCH_ALL_POSTS, DELETE_POST} from './ActionTypes'; \n\n\nconst postReducer=(posts=[], action)=>{\n    switch(action.type){\n        case 'FETCH_ALL_POSTS':\n            return action.payload;\n        case 'DELETE_POST':\n            return [...posts, posts.filter(post=>post._id && post._id!==action.payload)];\n      \n        case 'CREATE_POST':\n             return [...posts, action.payload];\n        default:\n            return posts; \n    }\n\n}\nexport default postReducer;","C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\AuthReducer.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Posts\\MyPosts.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Post\\Post.js",["99"],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Navbarb\\Navbarb.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Posts\\MyPostsCard.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Utils\\setAuthToken.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Routing\\PrivateRoute.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\UserReducer.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Redux\\ActionTypes.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\Dashboard\\Spinner.js",[],"C:\\Users\\HP\\Desktop\\animalis-main\\src\\Components\\UserInfo\\UserInfo.js",["100","101","102","103"],{"ruleId":"104","severity":1,"message":"105","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":16},{"ruleId":"104","severity":1,"message":"108","line":11,"column":29,"nodeType":"106","messageId":"107","endLine":11,"endColumn":46},{"ruleId":"104","severity":1,"message":"109","line":12,"column":8,"nodeType":"106","messageId":"107","endLine":12,"endColumn":13},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"104","severity":1,"message":"114","line":10,"column":10,"nodeType":"106","messageId":"107","endLine":10,"endColumn":23},{"ruleId":"104","severity":1,"message":"115","line":4,"column":29,"nodeType":"106","messageId":"107","endLine":4,"endColumn":34},{"ruleId":"104","severity":1,"message":"116","line":6,"column":9,"nodeType":"106","messageId":"107","endLine":6,"endColumn":19},{"ruleId":"104","severity":1,"message":"117","line":15,"column":11,"nodeType":"106","messageId":"107","endLine":15,"endColumn":16},{"ruleId":"104","severity":1,"message":"118","line":20,"column":12,"nodeType":"106","messageId":"107","endLine":20,"endColumn":16},{"ruleId":"104","severity":1,"message":"119","line":20,"column":18,"nodeType":"106","messageId":"107","endLine":20,"endColumn":25},{"ruleId":"104","severity":1,"message":"120","line":1,"column":9,"nodeType":"106","messageId":"107","endLine":1,"endColumn":24},{"ruleId":"104","severity":1,"message":"121","line":1,"column":26,"nodeType":"106","messageId":"107","endLine":1,"endColumn":37},{"ruleId":"104","severity":1,"message":"122","line":2,"column":15,"nodeType":"106","messageId":"107","endLine":2,"endColumn":21},{"ruleId":"104","severity":1,"message":"123","line":1,"column":25,"nodeType":"106","messageId":"107","endLine":1,"endColumn":34},{"ruleId":"104","severity":1,"message":"124","line":3,"column":9,"nodeType":"106","messageId":"107","endLine":3,"endColumn":20},{"ruleId":"104","severity":1,"message":"125","line":3,"column":22,"nodeType":"106","messageId":"107","endLine":3,"endColumn":33},{"ruleId":"104","severity":1,"message":"126","line":10,"column":9,"nodeType":"106","messageId":"107","endLine":10,"endColumn":12},"no-unused-vars","'FormPost' is defined but never used.","Identifier","unusedVar","'getCurrentProfile' is defined but never used.","'axios' is defined but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'nbCommentaire' is assigned a value but never used.","'Alert' is defined but never used.","'createUser' is defined but never used.","'users' is assigned a value but never used.","'etat' is assigned a value but never used.","'setEtat' is assigned a value but never used.","'FETCH_ALL_POSTS' is defined but never used.","'DELETE_POST' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]